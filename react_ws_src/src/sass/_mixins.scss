// Import sass:math module for division
@use "sass:math";

// TRANSITIONS
// copy ease code from here:: https://matthewlein.com/ceaser/
// and paste into css like this:: @include transition(all 400ms cubic-bezier(0.175, 0.885, 0.320, 1.275));
@mixin transition($args...){
-webkit-transition: $args; 
   -moz-transition: $args;
     -o-transition: $args; 
        transition: $args; 

-webkit-transition-timing-function: $args;
   -moz-transition-timing-function: $args;
     -o-transition-timing-function: $args;
        transition-timing-function: $args;
}

// FONT SIZES
@function calculateRem($size) {
  $remSize: math.div($size, 16px);
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// CLEARFIX
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// INPUT
@mixin textInput($width) {
  width: $width;
  background: #fff;
  border-radius: 7px;
  border:none;
  padding:0 18px;
  color: #888888;
  font-style: italic;
  @include font-size(18px);
  font-weight: 300;
  height: 46px;
  line-height: 46px;
  box-shadow:0px -4px 0px 0px #ebe6f1;
}

// BUTTON
@mixin button($width,$height,$shadowDepth,$bgColor,$shadowColor,$textColor){
	width:$width;
	height:$height;
	line-height:$height;
	text-align:center;
	border-radius:7px;
	background:$bgColor;
	color:$textColor;
	box-shadow:0px $shadowDepth 0px 0px $shadowColor;
	border:none;
	cursor:pointer;
	@include transition(.1s ease-in-out);	
	
	&:hover {
		opacity:.9;		
	}

	&:active {
		box-shadow:0px 1px 0px 0px $shadowColor;
		margin-top: 25px;
		margin-bottom: 15px;
	}
}

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: ($breakpoint-sm - 1)) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) and (max-width: ($breakpoint-md - 1)) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) and (max-width: ($breakpoint-lg - 1)) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) and (max-width: ($breakpoint-xl - 1)) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) and (max-width: ($breakpoint-xxl - 1)) {
      @content;
    }
  } @else if $breakpoint == 'xxl' {
    @media (min-width: $breakpoint-xxl) {
      @content;
    }
  }
}

@mixin respond-up($breakpoint) {
  @if $breakpoint == 'xs' {
    @content;
  } @else if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == 'xxl' {
    @media (min-width: $breakpoint-xxl) {
      @content;
    }
  }
}

@mixin respond-down($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: ($breakpoint-sm - 1)) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (max-width: ($breakpoint-md - 1)) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (max-width: ($breakpoint-lg - 1)) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (max-width: ($breakpoint-xl - 1)) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (max-width: ($breakpoint-xxl - 1)) {
      @content;
    }
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-row {
  display: flex;
  flex-direction: row;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Typography mixins
@mixin heading-1 {
  font-family: $hdrFont;
  font-size: $font-size-xxl;
  font-weight: $font-weight-bold;
  line-height: $line-height-sm;
  margin-bottom: $spacing-lg;
  
  @include respond-down('md') {
    font-size: $font-size-xl;
  }
}

@mixin heading-2 {
  font-family: $hdrFont;
  font-size: $font-size-xl;
  font-weight: $font-weight-bold;
  line-height: $line-height-sm;
  margin-bottom: $spacing-md;
  
  @include respond-down('md') {
    font-size: $font-size-lg;
  }
}

@mixin heading-3 {
  font-family: $hdrFont;
  font-size: $font-size-lg;
  font-weight: $font-weight-semibold;
  line-height: $line-height-base;
  margin-bottom: $spacing-sm;
  
  @include respond-down('md') {
    font-size: $font-size-base;
  }
}

@mixin body-text {
  font-family: $bodyFont;
  font-size: $font-size-base;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
}

// Utility mixins
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin overlay($opacity: 0.5, $color: $black) {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba($color, $opacity);
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Animation mixins
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin animate($name, $duration: 1s, $timing: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: none) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $timing;
  animation-delay: $delay;
  animation-iteration-count: $iteration;
  animation-direction: $direction;
  animation-fill-mode: $fill-mode;
}